
Parameters:
  GalleryId:
    Type: String
    Default: devtest
  DBInstanceClass:
    Type: String
    Default: db.r3.large    
Resources:
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      VpcId:
        Fn::ImportValue: 
          !Sub "${GalleryId}:VPC:Id"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 3306
        ToPort: 3306
        CidrIp: 0.0.0.0/0
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Why is this required?
      SubnetIds: 
        - Fn::ImportValue: !Sub "${GalleryId}:SubnetPubA:Id"
        - Fn::ImportValue: !Sub "${GalleryId}:SubnetPubB:Id"
  DBCluster:
      Type: AWS::RDS::DBCluster
      Properties:
        Engine: aurora
        MasterUsername: root
        MasterUserPassword: Masterkey123
        DBSubnetGroupName: !Ref DBSubnetGroup
        VpcSecurityGroupIds:
          - !Ref DBSecurityGroup
  DBPrimary:
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: aurora
      DBClusterIdentifier: !Ref "DBCluster"
      DBInstanceClass: !Ref "DBInstanceClass"
      DBSubnetGroupName: !Ref "DBSubnetGroup"
      PubliclyAccessible: true
Outputs:
  EndpointAddress:
    Value: 
      Fn::GetAtt: [ "DBPrimary" , "Endpoint.Address" ]
    Export:
      Name: !Sub "${GalleryId}:RDB:EndpointAddress"
