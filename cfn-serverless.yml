AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    sitting-ducks

    Sample SAM Template for sitting-ducks

Globals:
    Function:
        Timeout: 10
        MemorySize: 128
Parameters:
  GalleryId:
    Type: String
    Default: devtest
Resources:
    HelloFn:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: ./src/main/python/
            Handler: sducks.lambdas.hello
            Runtime: python3.6
            Events:
                HelloApi:
                    Type: Api
                    Properties:
                        Path: /
                        Method: get

    FiboIterFn:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: ./src/main/python/
            Handler: sducks.lambdas.fibo_iter
            Runtime: python3.6
            Events:
                FiboIterApi:
                    Type: Api
                    Properties:
                        Path: /fib_iter
                        Method: get
    FiboRecFn:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: ./src/main/python/
            Handler: sducks.lambdas.fibo_rec
            Runtime: python3.6
            Events:
                FiboRecApi:
                    Type: Api
                    Properties:
                        Path: /fib_rec
                        Method: get
    FiboMemoFn:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: ./src/main/python/
            Handler: sducks.lambdas.fibo_memo
            Runtime: python3.6
            Events:
                FiboMemoApi:
                    Type: Api
                    Properties:
                        Path: /fib_memo
                        Method: get
    FiboGenFn:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: ./src/main/python/
            Handler: sducks.lambdas.fibo_gen
            Runtime: python3.6
            Events:
                FiboGenFnApi:
                    Type: Api
                    Properties:
                        Path: /fib_gen
                        Method: get
    
    PutRandRole:
        Type: AWS::IAM::Role
        Properties:
            Path: "/"
            AssumeRolePolicyDocument: 
                Version: "2012-10-17"
                Statement: 
                - 
                    Effect: "Allow"
                    Principal: 
                        Service: 
                            - "lambda.amazonaws.com"
                    Action: 
                        - "sts:AssumeRole"
            Policies:
                - 
                  PolicyName: root
                  PolicyDocument:
                    Version: '2012-10-17'
                    Statement:
                        - 
                          Effect: Allow
                          Action: 
                            - "dynamodb:*"
                            - "cloudwatch:*"
                            - "logs:*"
                          Resource: "*"
    PutRandDDBFn:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: ./src/main/python/
            Handler: sducks.lambdas.put_rand_ddb
            Runtime: python3.6
            Role: !GetAtt "PutRandRole.Arn"
            Environment:
                Variables:
                    RAND_TABLE_NAME:
                        Fn::ImportValue: 
                            !Sub "${GalleryId}:DDB:RandTable"

            Events:
                PutRandDDBFnApi:
                    Type: Api
                    Properties:
                        Path: /put_rand_ddb
                        Method: get
    PutRandRDBFn:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: ./src/main/python/
            Handler: sducks.lambdas.put_rand_rdb
            Runtime: python3.6
            Role: !GetAtt "PutRandRole.Arn"
            Environment:
                Variables:
                    DB_HOST:
                        Fn::ImportValue: 
                            !Sub "${GalleryId}:RDB:EndpointAddress"            
            Events:
                PutRandRDBFnApi:
                    Type: Api
                    Properties:
                        Path: /put_rand_rdb
                        Method: get                            
Outputs:
    SittingDuck:
      Description: "API endpoint! Shoot!"
      Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
